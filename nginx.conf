# nginx.conf  --  docker-openresty
#
# This file is installed to:
#   `/usr/local/openresty/nginx/conf/nginx.conf`
# and is the file loaded by nginx at startup,
# unless the user specifies otherwise.
#
# It tracks the upstream OpenResty's `nginx.conf`, but removes the `server`
# section and adds this directive:
#     `include /etc/nginx/conf.d/*.conf;`
#
# The `docker-openresty` file `nginx.vh.default.conf` is copied to
# `/etc/nginx/conf.d/default.conf`.  It contains the `server section
# of the upstream `nginx.conf`.
#
# See https://github.com/openresty/docker-openresty/blob/master/README.md#nginx-config-files
#

#user  nobody;
worker_processes  1;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;


events {
    worker_connections  1024;
}


env SITE_HOSTNAME;
env API_URL;


http {
    include       mime.types;
    default_type  application/octet-stream;

    # Open resty defaults
    client_body_temp_path /var/run/openresty/nginx-client-body;
    proxy_temp_path       /var/run/openresty/nginx-proxy;
    fastcgi_temp_path     /var/run/openresty/nginx-fastcgi;
    uwsgi_temp_path       /var/run/openresty/nginx-uwsgi;
    scgi_temp_path        /var/run/openresty/nginx-scgi;

    sendfile        on;
    keepalive_timeout  65;


    server {
        listen 80 default_server;
        listen [::]:80 default_server;

        location / {
            content_by_lua_block {
            local cjson = require "cjson"

            ngx.status = ngx.HTTP_OK
            ngx.header.content_type = "application/json; charset=utf-8"
            ngx.say(cjson.encode({ api = os.getenv("API_URL") }))
            return ngx.exit(ngx.HTTP_OK)
            }
        }

        location /env-txt {
            content_by_lua_block {
            ngx.status = ngx.HTTP_OK
            ngx.header.content_type = "text/plain; charset=utf-8"
            ngx.say("hostname ", os.getenv("SITE_HOSTNAME"))
            return ngx.exit(ngx.HTTP_OK)
            }
        }

        error_page  404  /404.html;
    }
}
